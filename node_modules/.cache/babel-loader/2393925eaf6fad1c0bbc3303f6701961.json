{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Public\\\\project\\\\project\\\\clone-reddit\\\\src\\\\Components\\\\Posts\\\\Posts.jsx\";\nimport React, { Component } from 'react';\nimport s from './Posts.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      posts: []\n    };\n  }\n\n  async componentDidMount() {\n    let response = await fetch('http://www.reddit.com/r/cats.json');\n    let data = await response.json();\n    this.setState({\n      loading: true,\n      posts: data.data.children\n    });\n    console.log(this.state.posts);\n  }\n\n  renderPost() {\n    return this.state.posts.map((data, index) => {\n      if (data.data.url_overridden_by_dest) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.Content,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.ContentWrapper,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: data.data.url_overridden_by_dest,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: data.data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: data.data.subreddit_name_prefixed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this);\n      } else {\n        console.log('пусто');\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: s.Posts,\n      children: this.renderPost()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Github/Public/project/project/clone-reddit/src/Components/Posts/Posts.jsx"],"names":["React","Component","s","Posts","state","loading","posts","componentDidMount","response","fetch","data","json","setState","children","console","log","renderPost","map","index","url_overridden_by_dest","Content","ContentWrapper","title","subreddit_name_prefixed","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,qBAAd;;AAOA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;AAAA,SAIzCG,KAJyC,GAIjC;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAJiC;AAAA;;AAUlB,QAAjBC,iBAAiB,GAAG;AACtB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAA1B;AACA,QAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACA,SAAKC,QAAL,CAAc;AAAEP,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,KAAK,EAAEI,IAAI,CAACA,IAAL,CAAUG;AAAlC,KAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWE,KAAvB;AAKH;;AACDU,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKZ,KAAL,CAAWE,KAAX,CAAiBW,GAAjB,CAAqB,CAACP,IAAD,EAAOQ,KAAP,KAAiB;AACzC,UAAIR,IAAI,CAACA,IAAL,CAAUS,sBAAd,EAAsC;AAClC,4BACI;AAAiB,UAAA,SAAS,EAAEjB,CAAC,CAACkB,OAA9B;AAAA,kCACI;AAAK,YAAA,SAAS,EAAElB,CAAC,CAACmB,cAAlB;AAAA,oCACI;AAAK,cAAA,GAAG,EAAEX,IAAI,CAACA,IAAL,CAAUS,sBAApB;AAA4C,cAAA,GAAG,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBACKT,IAAI,CAACA,IAAL,CAAUY;AADf;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAKI;AAAA,wBACKZ;AADL;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI;AAAA,sBAAKA,IAAI,CAACA,IAAL,CAAUa;AAAf;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA,WAAUL,KAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAeH,OAhBD,MAgBO;AACHJ,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AACJ,KApBM,CAAP;AAqBH;;AAGDS,EAAAA,MAAM,GAAG;AACL,wBACI;AAAS,MAAA,SAAS,EAAEtB,CAAC,CAACC,KAAtB;AAAA,gBACK,KAAKa,UAAL;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAnDwC","sourcesContent":["import React, { Component } from 'react'\r\nimport s from './Posts.module.scss'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class Posts extends Component {\r\n\r\n\r\n\r\n    state = {\r\n        loading: true,\r\n        posts: []\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        let response = await fetch('http://www.reddit.com/r/cats.json')\r\n        let data = await response.json()\r\n        this.setState({ loading: true, posts: data.data.children })\r\n        console.log(this.state.posts);\r\n\r\n\r\n\r\n\r\n    }\r\n    renderPost() {\r\n        return this.state.posts.map((data, index) => {\r\n            if (data.data.url_overridden_by_dest) {\r\n                return (\r\n                    <div key={index} className={s.Content}>\r\n                        <div className={s.ContentWrapper} >\r\n                            <img src={data.data.url_overridden_by_dest} alt=\"\" />\r\n                            <p>\r\n                                {data.data.title}\r\n                            </p>\r\n                            <p>\r\n                                {data}\r\n                            </p>\r\n                        </div>\r\n                        <h4>{data.data.subreddit_name_prefixed}</h4>\r\n                    </div>\r\n\r\n                )\r\n            } else {\r\n                console.log('пусто');\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <section className={s.Posts}>\r\n                {this.renderPost()}\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}