{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\learn\\\\clone-reddit-dev\\\\src\\\\Components\\\\Posts\\\\PostItem\\\\PostItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport s from './PostItem.module.scss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport FavoriteButton from '../../UI/Favorite/Favorite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostItem = ({\n  postslist\n}) => {\n  _s();\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      width: 500,\n      height: 450\n    },\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)'\n    }\n  }));\n  const classes = useStyles();\n\n  if (postslist.data.preview) {\n    let postlink = 'https://www.reddit.com/' + postslist.data.permalink;\n    return /*#__PURE__*/_jsxDEV(GridListTile, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: postslist.data.url,\n        alt: postslist.data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n        title: postslist.data.title,\n        subtitle: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"by: \", postslist.data.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 35\n        }, this),\n        actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": `info about ${postslist.data.title}`,\n          className: classes.icon,\n          children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, postslist.data.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostItem, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", true);\n\n_c = PostItem;\nexport default PostItem; //  <div className={s.card}>\n//                 <div className={s.cardWrapper}>\n//                     <div className={s.cardMedia}>\n//                         <img src={postslist.data.url_overridden_by_dest} alt=\"\" />\n//                     </div>\n//                     <div className={s.cardText}>\n//                         <p>\n//                             {postslist.data.title}\n//                         </p>\n//                         <div className=\"div\">\n//                             <h6>{postslist.data.author_flair_text}</h6>\n//                             <h4>posted by <span>{postslist.data.author}</span> </h4>\n//                             <h5>{postslist.data.subreddit_name_prefixed}</h5>\n//                             <div className={s.cardAction}>\n//                                 <a href={postlink} target=\"_blank\" without rel=\"noreferrer\"> show comment</a>\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n//                 <FavoriteButton />\n//             </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["C:/Github/learn/clone-reddit-dev/src/Components/Posts/PostItem/PostItem.jsx"],"names":["React","s","makeStyles","GridListTile","GridListTileBar","ListSubheader","IconButton","InfoIcon","FavoriteButton","PostItem","postslist","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","classes","data","preview","postlink","permalink","url","title","author","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,wBAAd;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,OAAOC,cAAP,MAA2B,4BAA3B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AAEhC,QAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAY;AACrCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,OAAO,EAAE,MADP;AAEFC,MAAAA,QAAQ,EAAE,MAFR;AAGFC,MAAAA,cAAc,EAAE,cAHd;AAIFC,MAAAA,QAAQ,EAAE,QAJR;AAKFC,MAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC;AALxC,KAD+B;AAQrCC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,KAAK,EAAE,GADD;AAENC,MAAAA,MAAM,EAAE;AAFF,KAR2B;AAYrCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE;AADL;AAZ+B,GAAZ,CAAD,CAA5B;AAiBA,QAAMC,OAAO,GAAGhB,SAAS,EAAzB;;AAEA,MAAID,SAAS,CAACkB,IAAV,CAAeC,OAAnB,EAA4B;AACxB,QAAIC,QAAQ,GAAG,4BAA4BpB,SAAS,CAACkB,IAAV,CAAeG,SAA1D;AACA,wBAGQ,QAAC,YAAD;AAAA,8BACI;AAAK,QAAA,GAAG,EAAErB,SAAS,CAACkB,IAAV,CAAeI,GAAzB;AAA8B,QAAA,GAAG,EAAEtB,SAAS,CAACkB,IAAV,CAAeK;AAAlD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,eAAD;AACI,QAAA,KAAK,EAAEvB,SAAS,CAACkB,IAAV,CAAeK,KAD1B;AAEI,QAAA,QAAQ,eAAE;AAAA,6BAAWvB,SAAS,CAACkB,IAAV,CAAeM,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFd;AAGI,QAAA,UAAU,eACN,QAAC,UAAD;AAAY,wBAAa,cAAaxB,SAAS,CAACkB,IAAV,CAAeK,KAAM,EAA3D;AAA8D,UAAA,SAAS,EAAEN,OAAO,CAACF,IAAjF;AAAA,iCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,OAAmBf,SAAS,CAACkB,IAAV,CAAeO,EAAlC;AAAA;AAAA;AAAA;AAAA,YAHR;AAmBH;;AAID,sBAEI;AAAA;AAAA;AAAA;AAAA,UAFJ;AAMH,CApDD;;GAAM1B,Q;;KAAAA,Q;AAsDN,eAAeA,QAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA","sourcesContent":["import React from 'react'\r\nimport s from './PostItem.module.scss'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info'\r\n\r\nimport FavoriteButton from '../../UI/Favorite/Favorite'\r\n\r\nconst PostItem = ({ postslist }) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-around',\r\n            overflow: 'hidden',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        gridList: {\r\n            width: 500,\r\n            height: 450,\r\n        },\r\n        icon: {\r\n            color: 'rgba(255, 255, 255, 0.54)',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    if (postslist.data.preview) {\r\n        let postlink = 'https://www.reddit.com/' + postslist.data.permalink\r\n        return (\r\n            \r\n\r\n                <GridListTile key={postslist.data.id}>\r\n                    <img src={postslist.data.url} alt={postslist.data.title} />\r\n                    <GridListTileBar\r\n                        title={postslist.data.title}\r\n                        subtitle={<span>by: {postslist.data.author}</span>}\r\n                        actionIcon={\r\n                            <IconButton aria-label={`info about ${postslist.data.title}`} className={classes.icon}>\r\n                                <InfoIcon />\r\n                            </IconButton>\r\n                        }\r\n                    />\r\n                </GridListTile>\r\n\r\n            \r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default PostItem\r\n\r\n\r\n//  <div className={s.card}>\r\n//                 <div className={s.cardWrapper}>\r\n//                     <div className={s.cardMedia}>\r\n//                         <img src={postslist.data.url_overridden_by_dest} alt=\"\" />\r\n//                     </div>\r\n//                     <div className={s.cardText}>\r\n//                         <p>\r\n//                             {postslist.data.title}\r\n//                         </p>\r\n//                         <div className=\"div\">\r\n//                             <h6>{postslist.data.author_flair_text}</h6>\r\n//                             <h4>posted by <span>{postslist.data.author}</span> </h4>\r\n//                             <h5>{postslist.data.subreddit_name_prefixed}</h5>\r\n//                             <div className={s.cardAction}>\r\n//                                 <a href={postlink} target=\"_blank\" without rel=\"noreferrer\"> show comment</a>\r\n//                             </div>\r\n//                         </div>\r\n\r\n//                     </div>\r\n\r\n//                 </div>\r\n\r\n//                 <FavoriteButton />\r\n//             </div>"]},"metadata":{},"sourceType":"module"}