{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\learn\\\\clone-reddit-dev\\\\src\\\\Components\\\\Posts\\\\PostItem\\\\PostItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport s from './PostItem.module.scss';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport FavoriteButton from '../../UI/Favorite/Favorite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostItem = ({\n  postslist\n}) => {\n  _s();\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      width: 500,\n      height: 450\n    },\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)'\n    }\n  }));\n  const classes = useStyles();\n\n  if (postslist.data.preview) {\n    let postlink = 'https://www.reddit.com/' + postslist.data.permalink;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(GridList, {\n        GridList: true,\n        cellHeight: 200,\n        spa: true,\n        className: classes.gridList,\n        children: /*#__PURE__*/_jsxDEV(GridListTile, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: postslist.data.url,\n            alt: postslist.data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n            title: postslist.data.title,\n            subtitle: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"by: \", postslist.data.author]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 39\n            }, this),\n            actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": `info about ${postslist.data.title}`,\n              className: classes.icon,\n              children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, postslist.data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostItem, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", true);\n\n_c = PostItem;\nexport default PostItem; //  <div className={s.card}>\n//                 <div className={s.cardWrapper}>\n//                     <div className={s.cardMedia}>\n//                         <img src={postslist.data.url_overridden_by_dest} alt=\"\" />\n//                     </div>\n//                     <div className={s.cardText}>\n//                         <p>\n//                             {postslist.data.title}\n//                         </p>\n//                         <div className=\"div\">\n//                             <h6>{postslist.data.author_flair_text}</h6>\n//                             <h4>posted by <span>{postslist.data.author}</span> </h4>\n//                             <h5>{postslist.data.subreddit_name_prefixed}</h5>\n//                             <div className={s.cardAction}>\n//                                 <a href={postlink} target=\"_blank\" without rel=\"noreferrer\"> show comment</a>\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n//                 <FavoriteButton />\n//             </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["C:/Github/learn/clone-reddit-dev/src/Components/Posts/PostItem/PostItem.jsx"],"names":["React","s","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","InfoIcon","FavoriteButton","PostItem","postslist","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","classes","data","preview","postlink","permalink","url","title","author","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,wBAAd;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,OAAOC,cAAP,MAA2B,4BAA3B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AAEhC,QAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACrCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,OAAO,EAAE,MADP;AAEFC,MAAAA,QAAQ,EAAE,MAFR;AAGFC,MAAAA,cAAc,EAAE,cAHd;AAIFC,MAAAA,QAAQ,EAAE,QAJR;AAKFC,MAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC;AALxC,KAD+B;AAQrCC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,KAAK,EAAE,GADD;AAENC,MAAAA,MAAM,EAAE;AAFF,KAR2B;AAYrCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE;AADL;AAZ+B,GAAZ,CAAD,CAA5B;AAiBA,QAAMC,OAAO,GAAGhB,SAAS,EAAzB;;AAEA,MAAID,SAAS,CAACkB,IAAV,CAAeC,OAAnB,EAA4B;AACxB,QAAIC,QAAQ,GAAG,4BAA4BpB,SAAS,CAACkB,IAAV,CAAeG,SAA1D;AACA,wBACI;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACd,IAAxB;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,QAAQ,MAAlB;AAAmB,QAAA,UAAU,EAAE,GAA/B;AAAoC,QAAA,GAAG,MAAvC;AAAwC,QAAA,SAAS,EAAEc,OAAO,CAACL,QAA3D;AAAA,+BAKI,QAAC,YAAD;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEZ,SAAS,CAACkB,IAAV,CAAeI,GAAzB;AAA8B,YAAA,GAAG,EAAEtB,SAAS,CAACkB,IAAV,CAAeK;AAAlD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,eAAD;AACI,YAAA,KAAK,EAAEvB,SAAS,CAACkB,IAAV,CAAeK,KAD1B;AAEI,YAAA,QAAQ,eAAE;AAAA,iCAAWvB,SAAS,CAACkB,IAAV,CAAeM,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFd;AAGI,YAAA,UAAU,eACN,QAAC,UAAD;AAAY,4BAAa,cAAaxB,SAAS,CAACkB,IAAV,CAAeK,KAAM,EAA3D;AAA8D,cAAA,SAAS,EAAEN,OAAO,CAACF,IAAjF;AAAA,qCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAAmBf,SAAS,CAACkB,IAAV,CAAeO,EAAlC;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH;;AAID,sBAEI;AAAA;AAAA;AAAA;AAAA,UAFJ;AAMH,CAxDD;;GAAM1B,Q;;KAAAA,Q;AA0DN,eAAeA,QAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA","sourcesContent":["import React from 'react'\r\nimport s from './PostItem.module.scss'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info'\r\n\r\nimport FavoriteButton from '../../UI/Favorite/Favorite'\r\n\r\nconst PostItem = ({ postslist }) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-around',\r\n            overflow: 'hidden',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        gridList: {\r\n            width: 500,\r\n            height: 450,\r\n        },\r\n        icon: {\r\n            color: 'rgba(255, 255, 255, 0.54)',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    if (postslist.data.preview) {\r\n        let postlink = 'https://www.reddit.com/' + postslist.data.permalink\r\n        return (\r\n            <div className={classes.root}>\r\n                <GridList GridList cellHeight={200} spa className={classes.gridList}>\r\n                    {/* <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n                        <ListSubheader component=\"div\">December</ListSubheader>\r\n                    </GridListTile> */}\r\n\r\n                    <GridListTile key={postslist.data.id}>\r\n                        <img src={postslist.data.url} alt={postslist.data.title} />\r\n                        <GridListTileBar\r\n                            title={postslist.data.title}\r\n                            subtitle={<span>by: {postslist.data.author}</span>}\r\n                            actionIcon={\r\n                                <IconButton aria-label={`info about ${postslist.data.title}`} className={classes.icon}>\r\n                                    <InfoIcon />\r\n                                </IconButton>\r\n                            }\r\n                        />\r\n                    </GridListTile>\r\n                </GridList >\r\n            </div >\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default PostItem\r\n\r\n\r\n//  <div className={s.card}>\r\n//                 <div className={s.cardWrapper}>\r\n//                     <div className={s.cardMedia}>\r\n//                         <img src={postslist.data.url_overridden_by_dest} alt=\"\" />\r\n//                     </div>\r\n//                     <div className={s.cardText}>\r\n//                         <p>\r\n//                             {postslist.data.title}\r\n//                         </p>\r\n//                         <div className=\"div\">\r\n//                             <h6>{postslist.data.author_flair_text}</h6>\r\n//                             <h4>posted by <span>{postslist.data.author}</span> </h4>\r\n//                             <h5>{postslist.data.subreddit_name_prefixed}</h5>\r\n//                             <div className={s.cardAction}>\r\n//                                 <a href={postlink} target=\"_blank\" without rel=\"noreferrer\"> show comment</a>\r\n//                             </div>\r\n//                         </div>\r\n\r\n//                     </div>\r\n\r\n//                 </div>\r\n\r\n//                 <FavoriteButton />\r\n//             </div>"]},"metadata":{},"sourceType":"module"}