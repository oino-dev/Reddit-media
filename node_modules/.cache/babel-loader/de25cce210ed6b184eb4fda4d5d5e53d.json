{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Public\\\\project\\\\project\\\\clone-reddit\\\\src\\\\Components\\\\Posts\\\\Posts.jsx\";\nimport React, { Component } from 'react';\nimport s from './Posts.module.scss';\nimport FavoriteButton from '../UI/Favorite/Favorite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      posts: []\n    };\n  }\n\n  async componentDidMount() {\n    let response = await fetch('http://www.reddit.com/r/cats.json');\n    let data = await response.json();\n    this.setState({\n      loading: true,\n      posts: data.data.children\n    }); // console.log(this.state.posts);\n  }\n\n  renderMedia() {\n    return this.state.posts.map(data => {\n      if (data.data.post_hint === 'image') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.Content,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: data.data.url_overridden_by_dest,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.ContentWrapper,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: s.ContentBox,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: data.data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: data.data.author_flair_text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"posted at  by \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: data.data.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 51\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: data.data.subreddit_name_prefixed\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FavoriteButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this);\n      } else if (data.data.is_video === true) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.Content,\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            width: \"150\",\n            controls: true,\n            src: data.data.media.reddit_video.fallback_url,\n            type: \"video/mp4\",\n            children: \"Your browser doesn't support HTML5 video tag.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.ContentWrapper,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: s.ContentBox,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: data.data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"posted at  by \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: data.data.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 51\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FavoriteButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this);\n      } else return console.log('Content without media');\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: s.Posts,\n      children: [this.renderMedia(), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Github/Public/project/project/clone-reddit/src/Components/Posts/Posts.jsx"],"names":["React","Component","s","FavoriteButton","Posts","state","loading","posts","componentDidMount","response","fetch","data","json","setState","children","renderMedia","map","post_hint","Content","url_overridden_by_dest","ContentWrapper","ContentBox","title","author_flair_text","author","subreddit_name_prefixed","is_video","media","reddit_video","fallback_url","id","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport s from './Posts.module.scss'\r\nimport FavoriteButton from '../UI/Favorite/Favorite'\r\n\r\n\r\n\r\n\r\nexport default class Posts extends Component {\r\n\r\n\r\n\r\n    state = {\r\n        loading: true,\r\n        posts: []\r\n    }\r\n\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n        let response = await fetch('http://www.reddit.com/r/cats.json')\r\n        let data = await response.json()\r\n        this.setState({ loading: true, posts: data.data.children })\r\n        // console.log(this.state.posts);\r\n\r\n\r\n    }\r\n\r\n\r\n    renderMedia() {\r\n        return this.state.posts.map((data) => {\r\n            if (data.data.post_hint === 'image') {\r\n                return (\r\n                    <div className={s.Content}>\r\n                        <img src={data.data.url_overridden_by_dest} alt=\"\" />\r\n                        <div className={s.ContentWrapper}>\r\n                            <div className={s.ContentBox}>\r\n                                <p>\r\n                                    {data.data.title}\r\n                                </p>\r\n                                <p>\r\n                                    {data.data.author_flair_text}\r\n                                </p>\r\n                                <h5>\r\n                                    posted at  by <span>{data.data.author}</span>\r\n                                </h5>\r\n                                <h6>{data.data.subreddit_name_prefixed}</h6>\r\n                            </div>\r\n                            <FavoriteButton />\r\n                        </div>\r\n                    </div>\r\n\r\n                )\r\n            } else if (data.data.is_video === true) {\r\n                return (\r\n                    <div key={data.id} className={s.Content}>\r\n                        <video width='150' controls\r\n                            src={data.data.media.reddit_video.fallback_url}\r\n                            type='video/mp4'\r\n                        >\r\n                            Your browser doesn't support HTML5 video tag.\r\n                    </video>\r\n                        <div className={s.ContentWrapper}>\r\n                            <div className={s.ContentBox}>\r\n                                <p>\r\n                                    {data.data.title}\r\n                                </p>\r\n                                <h5>\r\n                                    posted at  by <span>{data.data.author}</span>\r\n                                </h5>\r\n                            </div>\r\n                            <FavoriteButton />\r\n                        </div>\r\n                    </div >\r\n\r\n\r\n\r\n\r\n                )\r\n            }\r\n            else return console.log('Content without media');\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <section className={s.Posts}>\r\n                {this.renderMedia()}\r\n                <div>\r\n\r\n                </div>\r\n\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}