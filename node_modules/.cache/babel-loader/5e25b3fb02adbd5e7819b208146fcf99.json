{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\learn\\\\clone-reddit-dev\\\\src\\\\Components\\\\Posts\\\\PostsList.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 900,\n    height: '100%'\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n}));\n\nconst PostsList = ({\n  content\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(GridList, {\n      cellHeight: 180,\n      className: classes.gridList,\n      children: [/*#__PURE__*/_jsxDEV(GridListTile, {\n        cols: 2,\n        style: {\n          height: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(ListSubheader, {\n          component: \"div\",\n          children: \"Clone reddit content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, \"Subheader\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), content.map(tile => /*#__PURE__*/_jsxDEV(GridListTile, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: tile.data.url,\n          alt: tile.data.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n          title: tile.data.title,\n          subtitle: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"by: \", tile.data.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 39\n          }, this),\n          actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": `star ${tile.data.title}`,\n            className: classes.icon,\n            children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, tile.img, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostsList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = PostsList;\nexport default PostsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsList\");","map":{"version":3,"sources":["C:/Github/learn/clone-reddit-dev/src/Components/Posts/PostsList.jsx"],"names":["React","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","InfoIcon","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","PostsList","content","classes","map","tile","data","url","author","title","img"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,QAAQ,EAAE,MAFR;AAGFC,IAAAA,cAAc,EAAE,cAHd;AAIFC,IAAAA,QAAQ,EAAE,QAJR;AAKFC,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC;AALxC,GAD+B;AAQrCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE,GADD;AAENC,IAAAA,MAAM,EAAE;AAFF,GAR2B;AAYrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE;AADL;AAZ+B,CAAZ,CAAD,CAA5B;;AAmBA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAE/B,QAAMC,OAAO,GAAGlB,SAAS,EAAzB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEkB,OAAO,CAAChB,IAAxB;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,UAAU,EAAE,GAAtB;AAA2B,MAAA,SAAS,EAAEgB,OAAO,CAACP,QAA9C;AAAA,8BACI,QAAC,YAAD;AAA8B,QAAA,IAAI,EAAE,CAApC;AAAuC,QAAA,KAAK,EAAE;AAAEE,UAAAA,MAAM,EAAE;AAAV,SAA9C;AAAA,+BACI,QAAC,aAAD;AAAe,UAAA,SAAS,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAkB,WAAlB;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKI,OAAO,CAACE,GAAR,CAAaC,IAAD,iBACT,QAAC,YAAD;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACC,IAAL,CAAUC,GAApB;AAAyB,UAAA,GAAG,EAAEF,IAAI,CAACC,IAAL,CAAUE;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,eAAD;AACI,UAAA,KAAK,EAAEH,IAAI,CAACC,IAAL,CAAUG,KADrB;AAEI,UAAA,QAAQ,eAAE;AAAA,+BAAWJ,IAAI,CAACC,IAAL,CAAUE,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFd;AAGI,UAAA,UAAU,eACN,QAAC,UAAD;AAAY,0BAAa,QAAOH,IAAI,CAACC,IAAL,CAAUG,KAAM,EAAhD;AAAmD,YAAA,SAAS,EAAEN,OAAO,CAACJ,IAAtE;AAAA,mCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAmBM,IAAI,CAACK,GAAxB;AAAA;AAAA;AAAA;AAAA,cADH,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA3BD;;GAAMT,S;UAEchB,S;;;KAFdgB,S;AA6BN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n        width: 900,\r\n        height: '100%'\r\n    },\r\n    icon: {\r\n        color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst PostsList = ({ content }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <GridList cellHeight={180} className={classes.gridList}>\r\n                <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n                    <ListSubheader component=\"div\">Clone reddit content</ListSubheader>\r\n                </GridListTile>\r\n                {content.map((tile) => (\r\n                    <GridListTile key={tile.img}>\r\n                        <img src={tile.data.url} alt={tile.data.author} />\r\n                        <GridListTileBar\r\n                            title={tile.data.title}\r\n                            subtitle={<span>by: {tile.data.author}</span>}\r\n                            actionIcon={\r\n                                <IconButton aria-label={`star ${tile.data.title}`} className={classes.icon}>\r\n                                    <InfoIcon />\r\n                                </IconButton>\r\n                            }\r\n                        />\r\n                    </GridListTile>\r\n                ))}\r\n            </GridList>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostsList\r\n"]},"metadata":{},"sourceType":"module"}