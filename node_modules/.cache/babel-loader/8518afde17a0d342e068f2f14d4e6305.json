{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Public\\\\project\\\\project\\\\clone-reddit\\\\src\\\\Components\\\\Posts\\\\Posts.jsx\";\nimport React, { Component } from 'react';\nimport s from './Posts.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      posts: []\n    };\n  }\n\n  async componentDidMount() {\n    let response = await fetch('http://www.reddit.com/r/cats.json');\n    let data = await response.json();\n    this.setState({\n      loading: true,\n      posts: data.data.children\n    }); // console.log(this.state.posts);\n  } // renderPost() {\n  //     return this.state.posts.map((data, index) => {\n  //         if (data.data.post_hint === 'image') {\n  //             return (\n  //                 <div key={index} className={s.Content}>\n  //                     <div className={s.ContentWrapper} >\n  //                         {data.data.post_hint === 'image'\n  //                             ? <img src={data.data.url_overridden_by_dest} alt=\"pic\" />\n  //                             : <video src={data.data.media.reddit_video.fallback_url}></video>\n  //                         }\n  //                         <div>\n  //                             <p>\n  //                                 {data.data.title}\n  //                             </p>\n  //                             <h5>\n  //                                 posted at  by <span>{data.data.author}</span>\n  //                             </h5>\n  //                         </div>\n  //                     </div>\n  //                     <h4>{data.data.subreddit_name_prefixed}</h4>\n  //                 </div >\n  //             )\n  //         } else {\n  //             console.log('this is video');\n  //         }\n  //     })\n  // }\n  // if(data.data.media !== null)\n\n\n  renderMedia() {\n    return this.state.posts.map(data => {\n      if (data.data.post_hint === 'image') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.Content,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: data.data.url_overridden_by_dest,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.ContentWrapper,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: data.data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this);\n      } else if (data.data.is_video === true) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.Content,\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              width: \"150\",\n              controls: true,\n              src: data.data.media.reddit_video.fallback_url,\n              type: \"video/mp4\",\n              children: \"Your browser doesn't support HTML5 video tag.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: s.ContentWrapper,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: data.data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"posted at  by \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: data.data.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 51\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, data.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this);\n      } else return console.log('Content without media');\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: s.Posts,\n      children: this.renderMedia()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Github/Public/project/project/clone-reddit/src/Components/Posts/Posts.jsx"],"names":["React","Component","s","Posts","state","loading","posts","componentDidMount","response","fetch","data","json","setState","children","renderMedia","map","post_hint","Content","url_overridden_by_dest","ContentWrapper","title","id","is_video","media","reddit_video","fallback_url","author","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,qBAAd;;AAOA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;AAAA,SAIzCG,KAJyC,GAIjC;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAJiC;AAAA;;AAYlB,QAAjBC,iBAAiB,GAAG;AACtB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAA1B;AACA,QAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACA,SAAKC,QAAL,CAAc;AAAEP,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,KAAK,EAAEI,IAAI,CAACA,IAAL,CAAUG;AAAlC,KAAd,EAHsB,CAItB;AAGH,GAnBwC,CAoBzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEAC,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKV,KAAL,CAAWE,KAAX,CAAiBS,GAAjB,CAAsBL,IAAD,IAAU;AAClC,UAAIA,IAAI,CAACA,IAAL,CAAUM,SAAV,KAAwB,OAA5B,EAAqC;AACjC,4BACI;AAAmB,UAAA,SAAS,EAAEd,CAAC,CAACe,OAAhC;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEP,IAAI,CAACA,IAAL,CAAUQ,sBAApB;AAA4C,YAAA,GAAG,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAEhB,CAAC,CAACiB,cAAlB;AAAA,mCACI;AAAA,wBACKT,IAAI,CAACA,IAAL,CAAUU;AADf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAAUV,IAAI,CAACW,EAAf;AAAA;AAAA;AAAA;AAAA,gBADJ;AAWH,OAZD,MAYO,IAAIX,IAAI,CAACA,IAAL,CAAUY,QAAV,KAAuB,IAA3B,EAAiC;AACpC,4BACI;AAAA,iCACI;AAAmB,YAAA,SAAS,EAAEpB,CAAC,CAACe,OAAhC;AAAA,oCACI;AAAO,cAAA,KAAK,EAAC,KAAb;AAAmB,cAAA,QAAQ,MAA3B;AACI,cAAA,GAAG,EAAEP,IAAI,CAACA,IAAL,CAAUa,KAAV,CAAgBC,YAAhB,CAA6BC,YADtC;AAEI,cAAA,IAAI,EAAC,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAOI;AAAK,cAAA,SAAS,EAAEvB,CAAC,CAACiB,cAAlB;AAAA,sCACI;AAAA,0BACKT,IAAI,CAACA,IAAL,CAAUU;AADf;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII;AAAA,0DACkB;AAAA,4BAAOV,IAAI,CAACA,IAAL,CAAUgB;AAAjB;AAAA;AAAA;AAAA;AAAA,wBADlB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA,aAAUhB,IAAI,CAACW,EAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAuBH,OAxBM,MAyBF,OAAOM,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAP;AACR,KAvCM,CAAP;AAwCH;;AAGDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAS,MAAA,SAAS,EAAE3B,CAAC,CAACC,KAAtB;AAAA,gBACK,KAAKW,WAAL;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAxGwC","sourcesContent":["import React, { Component } from 'react'\r\nimport s from './Posts.module.scss'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class Posts extends Component {\r\n\r\n\r\n\r\n    state = {\r\n        loading: true,\r\n        posts: []\r\n    }\r\n\r\n\r\n\r\n\r\n    async componentDidMount() {\r\n        let response = await fetch('http://www.reddit.com/r/cats.json')\r\n        let data = await response.json()\r\n        this.setState({ loading: true, posts: data.data.children })\r\n        // console.log(this.state.posts);\r\n\r\n\r\n    }\r\n    // renderPost() {\r\n    //     return this.state.posts.map((data, index) => {\r\n    //         if (data.data.post_hint === 'image') {\r\n    //             return (\r\n    //                 <div key={index} className={s.Content}>\r\n    //                     <div className={s.ContentWrapper} >\r\n    //                         {data.data.post_hint === 'image'\r\n    //                             ? <img src={data.data.url_overridden_by_dest} alt=\"pic\" />\r\n    //                             : <video src={data.data.media.reddit_video.fallback_url}></video>\r\n    //                         }\r\n    //                         <div>\r\n\r\n    //                             <p>\r\n    //                                 {data.data.title}\r\n    //                             </p>\r\n    //                             <h5>\r\n    //                                 posted at  by <span>{data.data.author}</span>\r\n    //                             </h5>\r\n\r\n    //                         </div>\r\n\r\n    //                     </div>\r\n    //                     <h4>{data.data.subreddit_name_prefixed}</h4>\r\n    //                 </div >\r\n\r\n    //             )\r\n    //         } else {\r\n    //             console.log('this is video');\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    // if(data.data.media !== null)\r\n\r\n    renderMedia() {\r\n        return this.state.posts.map((data) => {\r\n            if (data.data.post_hint === 'image') {\r\n                return (\r\n                    <div key={data.id} className={s.Content}>\r\n                        <img src={data.data.url_overridden_by_dest} alt=\"\" />\r\n                        <div className={s.ContentWrapper}>\r\n                            <p>\r\n                                {data.data.title}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                )\r\n            } else if (data.data.is_video === true) {\r\n                return (\r\n                    <div>\r\n                        <div key={data.id} className={s.Content}>\r\n                            <video width='150' controls\r\n                                src={data.data.media.reddit_video.fallback_url}\r\n                                type='video/mp4'\r\n                            >\r\n                                Your browser doesn't support HTML5 video tag.\r\n                    </video>\r\n                            <div className={s.ContentWrapper}>\r\n                                <p>\r\n                                    {data.data.title}\r\n                                </p>\r\n                                <h5>\r\n                                    posted at  by <span>{data.data.author}</span>\r\n                                </h5>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n\r\n                )\r\n            }\r\n            else return console.log('Content without media');\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <section className={s.Posts}>\r\n                {this.renderMedia()}\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}