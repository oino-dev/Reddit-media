{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Public\\\\project\\\\project\\\\clone-reddit\\\\src\\\\Components\\\\Posts\\\\PostsList.jsx\";\nimport React, { Component } from 'react';\nimport s from './PostsList.module.scss';\nimport ButtonMore from '../UI/Buttons/ButtonMore';\nimport PostItem from './PostItem/PostItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Posts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentSubreddit: 'cats',\n      after: null,\n      before: null,\n      loading: true,\n      page: 1,\n      posts: []\n    };\n    this.url = 'http://www.reddit.com/r/';\n    this.sorts = ['hot', 'new', 'top', 'controversial', 'rising'];\n    this.subredditArray = ['cats', 'dogs'];\n  }\n\n  componentDidMount() {\n    this.renderMedia(this.state.currentSubreddit);\n  }\n\n  renderMedia(sub) {\n    this.setState({\n      posts: [],\n      currentSubreddit: sub,\n      page: 1\n    });\n    fetch(this.url + sub + '/' + this.state.sort + '.json').then(res => res.json()).then(data => {\n      this.setState({\n        posts: data.data.children,\n        after: data.data.after,\n        before: data.data.efore\n      });\n      window.scroll(0, 0);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: s.Posts,\n      children: [/*#__PURE__*/_jsxDEV(PostItem, {\n        render: this.renderMedia,\n        content: this.state.posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ButtonMore, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Github/Public/project/project/clone-reddit/src/Components/Posts/PostsList.jsx"],"names":["React","Component","s","ButtonMore","PostItem","Posts","constructor","props","state","currentSubreddit","after","before","loading","page","posts","url","sorts","subredditArray","componentDidMount","renderMedia","sub","setState","fetch","sort","then","res","json","data","children","efore","window","scroll","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,yBAAd;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAGA,eAAe,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAEzCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SASnBC,KATmB,GASX;AACJC,MAAAA,gBAAgB,EAAE,MADd;AAEJC,MAAAA,KAAK,EAAE,IAFH;AAGJC,MAAAA,MAAM,EAAE,IAHJ;AAIJC,MAAAA,OAAO,EAAE,IAJL;AAKJC,MAAAA,IAAI,EAAE,CALF;AAMJC,MAAAA,KAAK,EAAE;AANH,KATW;AAEf,SAAKC,GAAL,GAAW,0BAAX;AACA,SAAKC,KAAL,GAAa,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,eAAtB,EAAuC,QAAvC,CAAb;AACA,SAAKC,cAAL,GAAsB,CAAC,MAAD,EAAS,MAAT,CAAtB;AACH;;AAYDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,WAAL,CAAiB,KAAKX,KAAL,CAAWC,gBAA5B;AACH;;AAEDU,EAAAA,WAAW,CAACC,GAAD,EAAM;AAEb,SAAKC,QAAL,CAAc;AACVP,MAAAA,KAAK,EAAE,EADG;AAEVL,MAAAA,gBAAgB,EAAEW,GAFR;AAGVP,MAAAA,IAAI,EAAE;AAHI,KAAd;AAMAS,IAAAA,KAAK,CAAC,KAAKP,GAAL,GAAWK,GAAX,GAAiB,GAAjB,GAAuB,KAAKZ,KAAL,CAAWe,IAAlC,GAAyC,OAA1C,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZ,WAAKN,QAAL,CAAc;AACVP,QAAAA,KAAK,EAAEa,IAAI,CAACA,IAAL,CAAUC,QADP;AAEVlB,QAAAA,KAAK,EAAEiB,IAAI,CAACA,IAAL,CAAUjB,KAFP;AAGVC,QAAAA,MAAM,EAAEgB,IAAI,CAACA,IAAL,CAAUE;AAHR,OAAd;AAKAC,MAAAA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiB,CAAjB;AACH,KATL;AAUH;;AAKDC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAS,MAAA,SAAS,EAAE9B,CAAC,CAACG,KAAtB;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKc,WAAvB;AAAoC,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWM;AAAxD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAzDwC","sourcesContent":["import React, { Component } from 'react'\r\nimport s from './PostsList.module.scss'\r\nimport ButtonMore from '../UI/Buttons/ButtonMore'\r\nimport PostItem from './PostItem/PostItem'\r\n\r\n\r\nexport default class Posts extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.url = 'http://www.reddit.com/r/'\r\n        this.sorts = ['hot', 'new', 'top', 'controversial', 'rising']\r\n        this.subredditArray = ['cats', 'dogs']\r\n    }\r\n\r\n\r\n\r\n    state = {\r\n        currentSubreddit: 'cats',\r\n        after: null,\r\n        before: null,\r\n        loading: true,\r\n        page: 1,\r\n        posts: []\r\n    }\r\n    componentDidMount() {\r\n        this.renderMedia(this.state.currentSubreddit)\r\n    }\r\n\r\n    renderMedia(sub) {\r\n\r\n        this.setState({\r\n            posts: [],\r\n            currentSubreddit: sub,\r\n            page: 1\r\n        })\r\n\r\n        fetch(this.url + sub + '/' + this.state.sort + '.json')\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    posts: data.data.children,\r\n                    after: data.data.after,\r\n                    before: data.data.efore\r\n                })\r\n                window.scroll(0, 0)\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <section className={s.Posts} >\r\n                <PostItem render={this.renderMedia} content={this.state.posts} />\r\n                <div>\r\n                    <ButtonMore />\r\n                </div>\r\n\r\n            </section >\r\n        )\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}