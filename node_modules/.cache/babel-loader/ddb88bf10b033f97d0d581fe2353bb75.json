{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\learn\\\\clone-reddit-dev\\\\src\\\\Components\\\\Home\\\\Home.jsx\";\nimport React, { Component } from 'react';\nimport s from './Home.module.scss';\nimport PostList from '../Posts/PostsList';\nimport ButtonNext from '../UI/Buttons/ButtonNext';\nimport ButtonPrev from '../UI/Buttons/ButtonPrev';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentSubreddit: 'cats',\n      sort: 'top',\n      after: null,\n      before: null,\n      loading: true,\n      page: 1,\n      posts: []\n    };\n    this.url = 'http://www.reddit.com/r/';\n    this.sorts = ['hot', 'new', 'top', 'controversial', 'rising'];\n    this.subredditArray = ['cats', 'dogs'];\n  }\n\n  componentDidMount() {\n    this.renderMedia(this.state.currentSubreddit);\n  }\n\n  renderMedia(sub) {\n    this.setState({\n      posts: [],\n      currentSubreddit: sub,\n      page: 1\n    });\n    fetch(this.url + sub + '/' + this.state.sort + '.json').then(res => res.json()).then(data => {\n      this.setState({\n        posts: data.data.children,\n        after: data.data.after,\n        before: data.data.before\n      });\n      window.scroll(0, 0);\n    });\n  }\n\n  render() {\n    let contentMedia;\n\n    if (this.state.posts.length > 0) {\n      contentMedia = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.Content,\n        children: [\" \", /*#__PURE__*/_jsxDEV(PostList, {\n          content: this.state.posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 28\n      }, this);\n    } else contentMedia = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.noMedia,\n      children: \"Loading posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 31\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        children: contentMedia\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), \".HomeButton\", /*#__PURE__*/_jsxDEV(ButtonPrev, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonNext, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Github/learn/clone-reddit-dev/src/Components/Home/Home.jsx"],"names":["React","Component","s","PostList","ButtonNext","ButtonPrev","Home","constructor","props","state","currentSubreddit","sort","after","before","loading","page","posts","url","sorts","subredditArray","componentDidMount","renderMedia","sub","setState","fetch","then","res","json","data","children","window","scroll","render","contentMedia","length","Content","noMedia"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,oBAAd;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AACA,eAAe,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAIxCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SASnBC,KATmB,GASX;AACJC,MAAAA,gBAAgB,EAAE,MADd;AAEJC,MAAAA,IAAI,EAAE,KAFF;AAGJC,MAAAA,KAAK,EAAE,IAHH;AAIJC,MAAAA,MAAM,EAAE,IAJJ;AAKJC,MAAAA,OAAO,EAAE,IALL;AAMJC,MAAAA,IAAI,EAAE,CANF;AAOJC,MAAAA,KAAK,EAAE;AAPH,KATW;AAEf,SAAKC,GAAL,GAAW,0BAAX;AACA,SAAKC,KAAL,GAAa,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,eAAtB,EAAuC,QAAvC,CAAb;AACA,SAAKC,cAAL,GAAsB,CAAC,MAAD,EAAS,MAAT,CAAtB;AACH;;AAaDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,WAAL,CAAiB,KAAKZ,KAAL,CAAWC,gBAA5B;AACH;;AAEDW,EAAAA,WAAW,CAACC,GAAD,EAAM;AAEb,SAAKC,QAAL,CAAc;AACVP,MAAAA,KAAK,EAAE,EADG;AAEVN,MAAAA,gBAAgB,EAAEY,GAFR;AAGVP,MAAAA,IAAI,EAAE;AAHI,KAAd;AAMAS,IAAAA,KAAK,CAAC,KAAKP,GAAL,GAAWK,GAAX,GAAiB,GAAjB,GAAuB,KAAKb,KAAL,CAAWE,IAAlC,GAAyC,OAA1C,CAAL,CACKc,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZ,WAAKL,QAAL,CAAc;AACVP,QAAAA,KAAK,EAAEY,IAAI,CAACA,IAAL,CAAUC,QADP;AAEVjB,QAAAA,KAAK,EAAEgB,IAAI,CAACA,IAAL,CAAUhB,KAFP;AAGVC,QAAAA,MAAM,EAAEe,IAAI,CAACA,IAAL,CAAUf;AAHR,OAAd;AAKAiB,MAAAA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiB,CAAjB;AACH,KATL;AAUH;;AAKDC,EAAAA,MAAM,GAAG;AAGL,QAAIC,YAAJ;;AACA,QAAI,KAAKxB,KAAL,CAAWO,KAAX,CAAiBkB,MAAjB,GAA0B,CAA9B,EAAiC;AAC7BD,MAAAA,YAAY,gBAAG;AAAK,QAAA,SAAS,EAAE/B,CAAC,CAACiC,OAAlB;AAAA,qCAA6B,QAAC,QAAD;AAAU,UAAA,OAAO,EAAE,KAAK1B,KAAL,CAAWO;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAf;AACH,KAFD,MAEOiB,YAAY,gBAAG;AAAK,MAAA,SAAS,EAAE/B,CAAC,CAACkC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAf;;AAEP,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI;AAAA,kBACKH;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,8BAKI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AApEuC","sourcesContent":["import React, { Component } from 'react'\r\nimport s from './Home.module.scss'\r\nimport PostList from '../Posts/PostsList'\r\nimport ButtonNext from '../UI/Buttons/ButtonNext'\r\nimport ButtonPrev from '../UI/Buttons/ButtonPrev'\r\nexport default class Home extends Component {\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.url = 'http://www.reddit.com/r/'\r\n        this.sorts = ['hot', 'new', 'top', 'controversial', 'rising']\r\n        this.subredditArray = ['cats', 'dogs']\r\n    }\r\n\r\n\r\n\r\n    state = {\r\n        currentSubreddit: 'cats',\r\n        sort: 'top',\r\n        after: null,\r\n        before: null,\r\n        loading: true,\r\n        page: 1,\r\n        posts: []\r\n    }\r\n    componentDidMount() {\r\n        this.renderMedia(this.state.currentSubreddit)\r\n    }\r\n\r\n    renderMedia(sub) {\r\n\r\n        this.setState({\r\n            posts: [],\r\n            currentSubreddit: sub,\r\n            page: 1\r\n        })\r\n\r\n        fetch(this.url + sub + '/' + this.state.sort + '.json')\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    posts: data.data.children,\r\n                    after: data.data.after,\r\n                    before: data.data.before\r\n                })\r\n                window.scroll(0, 0)\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        let contentMedia\r\n        if (this.state.posts.length > 0) {\r\n            contentMedia = <div className={s.Content} > <PostList content={this.state.posts} /></div>\r\n        } else contentMedia = <div className={s.noMedia}>Loading posts</div>\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <main  >\r\n                    {contentMedia}\r\n                </main >\r\n.HomeButton\r\n                <ButtonPrev />\r\n                <ButtonNext />\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}