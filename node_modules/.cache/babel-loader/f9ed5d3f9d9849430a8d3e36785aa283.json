{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Public\\\\project\\\\project\\\\clone-reddit\\\\src\\\\Components\\\\Posts\\\\PostsList.jsx\";\nimport React, { Component } from 'react';\nimport s from './PostsList.module.scss';\nimport ButtonMore from '../UI/Buttons/ButtonMore';\nimport PostItem from './PostItem/PostItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Posts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: 'http://www.reddit.com/r/',\n      currentSubreddit: 'cats',\n      after: null,\n      before: null,\n      loading: true,\n      page: 1,\n      posts: []\n    };\n    this.url = 'http://www.reddit.com/r/';\n    this.sorts = ['hot', 'new', 'top', 'controversial', 'rising'];\n  }\n\n  // clickButtonMore = () => {\n  //     fetch(this.state.url + this.state.currentSubreddit + '.json?count=20' + '?sort=top&show=all&t=all&after=' + this.state.after)\n  //         .then(res => res.json())\n  //         .then((data) => {\n  //             this.setState({\n  //                 posts: data.data.children,\n  //                 after: data.after,\n  //                 before: data.before,\n  //             })\n  //         })\n  //     return this.state.posts.map((data, index) => {\n  //         if (data.data.post_hint === 'image') {\n  //             return (\n  //                 <div className={s.Content}>\n  //                     <img src={data.data.url_overridden_by_dest} alt={data.data.author_flair_text} />\n  //                     <div className={s.ContentWrapper}>\n  //                         <div className={s.ContentBox}>\n  //                             <p>\n  //                                 {data.data.title}\n  //                             </p>\n  //                             <p>\n  //                                 {data.data.author_flair_text}\n  //                             </p>\n  //                             <h5>\n  //                                 posted at  by <span>{data.data.author}</span>\n  //                             </h5>\n  //                             <h6>{data.data.subreddit_name_prefixed}</h6>\n  //                         </div>\n  //                     </div>\n  //                 </div>\n  //             )\n  //         } else if (data.data.is_video === true) {\n  //             return (\n  //                 <div className={s.Content}>\n  //                     <video width='150' controls\n  //                         src={data.data.media.reddit_video.fallback_url}\n  //                         type='video/mp4'\n  //                     >\n  //                         Your browser doesn't support HTML5 video tag.\n  //                             </video>\n  //                     <div className={s.ContentWrapper}>\n  //                         <div className={s.ContentBox}>\n  //                             <p>\n  //                                 {data.data.title}\n  //                             </p>\n  //                             <h5>\n  //                                 posted at  by <span>{data.data.author}</span>\n  //                             </h5>\n  //                         </div>\n  //                         <FavoriteButton />\n  //                     </div>\n  //                 </div >\n  //             )\n  //         }\n  //     })\n  // }\n  renderMedia() {\n    fetch(this.state.url + this.state.currentSubreddit + '.json').then(res => res.json()).then(data => {\n      this.setState({\n        posts: data.data.children,\n        after: data.data.after\n      });\n    });\n  } // fetch(this.state.url + this.state.currentSubreddit + '.json?count=20' + '?sort=top&show=all&t=all&after=' + this.state.after)\n  //         .then(res => res.json())\n  // .then((data) => {\n  //     this.setState({\n  //         posts: data.data.children,\n  //         after: data.after,\n  //         before: data.before,\n  //     })\n  // })\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: s.Posts,\n      children: [/*#__PURE__*/_jsxDEV(PostItem, {\n        render: this.renderMedia(),\n        content: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ButtonMore, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Github/Public/project/project/clone-reddit/src/Components/Posts/PostsList.jsx"],"names":["React","Component","s","ButtonMore","PostItem","Posts","constructor","props","state","url","currentSubreddit","after","before","loading","page","posts","sorts","renderMedia","fetch","then","res","json","data","setState","children","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,yBAAd;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAGA,eAAe,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAEzCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAQnBC,KARmB,GAQX;AACJC,MAAAA,GAAG,EAAE,0BADD;AAEJC,MAAAA,gBAAgB,EAAE,MAFd;AAGJC,MAAAA,KAAK,EAAE,IAHH;AAIJC,MAAAA,MAAM,EAAE,IAJJ;AAKJC,MAAAA,OAAO,EAAE,IALL;AAMJC,MAAAA,IAAI,EAAE,CANF;AAOJC,MAAAA,KAAK,EAAE;AAPH,KARW;AAEf,SAAKN,GAAL,GAAW,0BAAX;AACA,SAAKO,KAAL,GAAa,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,eAAtB,EAAuC,QAAvC,CAAb;AACH;;AAoBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIAC,EAAAA,WAAW,GAAG;AAEVC,IAAAA,KAAK,CAAC,KAAKV,KAAL,CAAWC,GAAX,GAAiB,KAAKD,KAAL,CAAWE,gBAA5B,GAA+C,OAAhD,CAAL,CACKS,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZ,WAAKC,QAAL,CAAc;AACVR,QAAAA,KAAK,EAAEO,IAAI,CAACA,IAAL,CAAUE,QADP;AAEVb,QAAAA,KAAK,EAAEW,IAAI,CAACA,IAAL,CAAUX;AAFP,OAAd;AAIH,KAPL;AAcH,GAvGwC,CAwGzC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAGAc,EAAAA,MAAM,GAAG;AACL,wBACI;AAAS,MAAA,SAAS,EAAEvB,CAAC,CAACG,KAAtB;AAAA,8BACI,QAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKY,WAAL,EAAlB;AAAsC,QAAA,OAAO,EAAE,KAAKT;AAApD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA9HwC","sourcesContent":["import React, { Component } from 'react'\r\nimport s from './PostsList.module.scss'\r\nimport ButtonMore from '../UI/Buttons/ButtonMore'\r\nimport PostItem from './PostItem/PostItem'\r\n\r\n\r\nexport default class Posts extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.url = 'http://www.reddit.com/r/'\r\n        this.sorts = ['hot', 'new', 'top', 'controversial', 'rising']\r\n    }\r\n\r\n\r\n\r\n    state = {\r\n        url: 'http://www.reddit.com/r/',\r\n        currentSubreddit: 'cats',\r\n        after: null,\r\n        before: null,\r\n        loading: true,\r\n        page: 1,\r\n        posts: []\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // clickButtonMore = () => {\r\n    //     fetch(this.state.url + this.state.currentSubreddit + '.json?count=20' + '?sort=top&show=all&t=all&after=' + this.state.after)\r\n    //         .then(res => res.json())\r\n    //         .then((data) => {\r\n    //             this.setState({\r\n    //                 posts: data.data.children,\r\n    //                 after: data.after,\r\n    //                 before: data.before,\r\n\r\n    //             })\r\n    //         })\r\n    //     return this.state.posts.map((data, index) => {\r\n    //         if (data.data.post_hint === 'image') {\r\n\r\n    //             return (\r\n    //                 <div className={s.Content}>\r\n    //                     <img src={data.data.url_overridden_by_dest} alt={data.data.author_flair_text} />\r\n    //                     <div className={s.ContentWrapper}>\r\n    //                         <div className={s.ContentBox}>\r\n    //                             <p>\r\n    //                                 {data.data.title}\r\n    //                             </p>\r\n    //                             <p>\r\n    //                                 {data.data.author_flair_text}\r\n    //                             </p>\r\n    //                             <h5>\r\n    //                                 posted at  by <span>{data.data.author}</span>\r\n    //                             </h5>\r\n    //                             <h6>{data.data.subreddit_name_prefixed}</h6>\r\n    //                         </div>\r\n    //                     </div>\r\n    //                 </div>\r\n    //             )\r\n    //         } else if (data.data.is_video === true) {\r\n    //             return (\r\n    //                 <div className={s.Content}>\r\n    //                     <video width='150' controls\r\n    //                         src={data.data.media.reddit_video.fallback_url}\r\n    //                         type='video/mp4'\r\n    //                     >\r\n    //                         Your browser doesn't support HTML5 video tag.\r\n    //                             </video>\r\n    //                     <div className={s.ContentWrapper}>\r\n    //                         <div className={s.ContentBox}>\r\n    //                             <p>\r\n    //                                 {data.data.title}\r\n    //                             </p>\r\n    //                             <h5>\r\n    //                                 posted at  by <span>{data.data.author}</span>\r\n    //                             </h5>\r\n    //                         </div>\r\n    //                         <FavoriteButton />\r\n    //                     </div>\r\n    //                 </div >\r\n    //             )\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n\r\n\r\n    renderMedia() {\r\n\r\n        fetch(this.state.url + this.state.currentSubreddit + '.json')\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    posts: data.data.children,\r\n                    after: data.data.after\r\n                })\r\n            })\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    // fetch(this.state.url + this.state.currentSubreddit + '.json?count=20' + '?sort=top&show=all&t=all&after=' + this.state.after)\r\n    //         .then(res => res.json())\r\n    // .then((data) => {\r\n    //     this.setState({\r\n    //         posts: data.data.children,\r\n    //         after: data.after,\r\n    //         before: data.before,\r\n\r\n    //     })\r\n    // })\r\n\r\n\r\n    render() {\r\n        return (\r\n            <section className={s.Posts} >\r\n                <PostItem render={this.renderMedia()} content={this.state} />\r\n                <div>\r\n                    <ButtonMore />\r\n                </div>\r\n\r\n            </section >\r\n        )\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}