[{"C:\\Github\\Public\\project\\project\\clone-reddit\\src\\index.js":"1","C:\\Github\\Public\\project\\project\\clone-reddit\\src\\App.js":"2","C:\\Github\\Public\\project\\project\\clone-reddit\\src\\reportWebVitals.js":"3","C:\\Github\\Public\\project\\project\\clone-reddit\\src\\hoc\\Layout\\Layout.jsx":"4","C:\\Github\\Public\\project\\project\\clone-reddit\\src\\Components\\Favorite\\Favorite.jsx":"5","C:\\Github\\Public\\project\\project\\clone-reddit\\src\\Components\\Home\\Home.jsx":"6","C:\\Github\\Public\\project\\project\\clone-reddit\\src\\Components\\Navigation\\Drawer\\Drawer.jsx":"7","C:\\Github\\Public\\project\\project\\clone-reddit\\src\\Components\\Navigation\\MenuToggle\\MenuToggle.jsx":"8","C:\\Github\\Public\\project\\project\\clone-reddit\\src\\Components\\UI\\Backdrop\\Backdrop.jsx":"9","C:\\Github\\Public\\project\\project\\clone-reddit\\src\\Components\\UI\\Favorite\\Favorite.jsx":"10","C:\\Github\\Public\\project\\project\\clone-reddit\\src\\Components\\Posts\\PostsList.jsx":"11","C:\\Github\\Public\\project\\project\\clone-reddit\\src\\Components\\Posts\\PostItem\\PostItem.jsx":"12","C:\\Github\\learn\\clone-reddit-dev\\src\\index.js":"13","C:\\Github\\learn\\clone-reddit-dev\\src\\reportWebVitals.js":"14","C:\\Github\\learn\\clone-reddit-dev\\src\\App.js":"15","C:\\Github\\learn\\clone-reddit-dev\\src\\hoc\\Layout\\Layout.jsx":"16","C:\\Github\\learn\\clone-reddit-dev\\src\\Components\\Home\\Home.jsx":"17","C:\\Github\\learn\\clone-reddit-dev\\src\\Components\\Posts\\PostsList.jsx":"18","C:\\Github\\learn\\clone-reddit-dev\\src\\Components\\Navigation\\MenuToggle\\MenuToggle.jsx":"19","C:\\Github\\learn\\clone-reddit-dev\\src\\Components\\Navigation\\Drawer\\Drawer.jsx":"20","C:\\Github\\learn\\clone-reddit-dev\\src\\Components\\Posts\\PostItem\\PostItem.jsx":"21","C:\\Github\\learn\\clone-reddit-dev\\src\\Components\\UI\\Backdrop\\Backdrop.jsx":"22","C:\\Github\\learn\\clone-reddit-dev\\src\\Components\\UI\\Favorite\\Favorite.jsx":"23","C:\\Github\\learn\\clone-reddit-dev\\src\\Components\\UI\\Buttons\\ButtonNext.jsx":"24","C:\\Github\\learn\\clone-reddit-dev\\src\\Components\\UI\\Buttons\\ButtonPrev.jsx":"25","C:\\Github\\Reddit-media\\src\\index.js":"26","C:\\Github\\Reddit-media\\src\\App.js":"27","C:\\Github\\Reddit-media\\src\\reportWebVitals.js":"28","C:\\Github\\Reddit-media\\src\\hoc\\Layout\\Layout.jsx":"29","C:\\Github\\Reddit-media\\src\\Components\\Home\\Home.jsx":"30","C:\\Github\\Reddit-media\\src\\Components\\Posts\\PostsList.jsx":"31","C:\\Github\\Reddit-media\\src\\Components\\Navigation\\Drawer\\Drawer.jsx":"32","C:\\Github\\Reddit-media\\src\\Components\\Navigation\\MenuToggle\\MenuToggle.jsx":"33","C:\\Github\\Reddit-media\\src\\Components\\UI\\Buttons\\ButtonPrev.jsx":"34","C:\\Github\\Reddit-media\\src\\Components\\UI\\Buttons\\ButtonNext.jsx":"35","C:\\Github\\Reddit-media\\src\\Components\\UI\\Backdrop\\Backdrop.jsx":"36","C:\\Github\\Reddit-media\\src\\Components\\Posts\\PostItem\\PostItem.jsx":"37","C:\\Github\\Reddit-media\\src\\Components\\Favorite\\Favorite.jsx":"38","C:\\Github\\Reddit-media\\src\\Components\\Favorite\\FavItem\\FavItem.jsx":"39","C:\\Github\\Reddit-media\\src\\Components\\Favorite\\FavItem\\Card\\Card.jsx":"40"},{"size":629,"mtime":1613927901990,"results":"41","hashOfConfig":"42"},{"size":507,"mtime":1613941305444,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":1612805111435,"results":"44","hashOfConfig":"42"},{"size":959,"mtime":1614037254982,"results":"45","hashOfConfig":"42"},{"size":0,"mtime":1613912090738,"results":"46","hashOfConfig":"42"},{"size":1626,"mtime":1614281949486,"results":"47","hashOfConfig":"42"},{"size":1525,"mtime":1613940819702,"results":"48","hashOfConfig":"42"},{"size":611,"mtime":1613929934772,"results":"49","hashOfConfig":"42"},{"size":231,"mtime":1613940642908,"results":"50","hashOfConfig":"42"},{"size":427,"mtime":1614110131902,"results":"51","hashOfConfig":"42"},{"size":416,"mtime":1614282785190,"results":"52","hashOfConfig":"42"},{"size":1465,"mtime":1614321585730,"results":"53","hashOfConfig":"42"},{"size":629,"mtime":1613927901990,"results":"54","hashOfConfig":"55"},{"size":362,"mtime":1612805111435,"results":"56","hashOfConfig":"55"},{"size":507,"mtime":1613941305444,"results":"57","hashOfConfig":"55"},{"size":959,"mtime":1614037254982,"results":"58","hashOfConfig":"55"},{"size":1965,"mtime":1614343690525,"results":"59","hashOfConfig":"55"},{"size":3418,"mtime":1614341959512,"results":"60","hashOfConfig":"55"},{"size":611,"mtime":1613929934772,"results":"61","hashOfConfig":"55"},{"size":1525,"mtime":1613940819702,"results":"62","hashOfConfig":"55"},{"size":2723,"mtime":1614328707107,"results":"63","hashOfConfig":"55"},{"size":231,"mtime":1613940642908,"results":"64","hashOfConfig":"55"},{"size":427,"mtime":1614110131902,"results":"65","hashOfConfig":"55"},{"size":647,"mtime":1614343546516,"results":"66","hashOfConfig":"55"},{"size":640,"mtime":1614343532799,"results":"67","hashOfConfig":"55"},{"size":640,"mtime":1614540399968,"results":"68","hashOfConfig":"69"},{"size":528,"mtime":1614541516619,"results":"70","hashOfConfig":"69"},{"size":362,"mtime":1612805111435,"results":"71","hashOfConfig":"69"},{"size":910,"mtime":1614365319376,"results":"72","hashOfConfig":"69"},{"size":4734,"mtime":1614541564388,"results":"73","hashOfConfig":"69"},{"size":1764,"mtime":1614540275085,"results":"74","hashOfConfig":"69"},{"size":1480,"mtime":1614523502973,"results":"75","hashOfConfig":"69"},{"size":611,"mtime":1613929934772,"results":"76","hashOfConfig":"69"},{"size":664,"mtime":1614354661831,"results":"77","hashOfConfig":"69"},{"size":671,"mtime":1614351323506,"results":"78","hashOfConfig":"69"},{"size":231,"mtime":1613940642908,"results":"79","hashOfConfig":"69"},{"size":3452,"mtime":1614532432520,"results":"80","hashOfConfig":"69"},{"size":1477,"mtime":1614535028940,"results":"81","hashOfConfig":"69"},{"size":521,"mtime":1614539390568,"results":"82","hashOfConfig":"69"},{"size":191,"mtime":1614532817504,"results":"83","hashOfConfig":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"hjyw2s",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"lbhs66",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"112"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},"jrmohk",{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"141"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"141"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},"C:\\Github\\Public\\project\\project\\clone-reddit\\src\\index.js",[],["172","173"],"C:\\Github\\Public\\project\\project\\clone-reddit\\src\\App.js",[],"C:\\Github\\Public\\project\\project\\clone-reddit\\src\\reportWebVitals.js",[],"C:\\Github\\Public\\project\\project\\clone-reddit\\src\\hoc\\Layout\\Layout.jsx",[],"C:\\Github\\Public\\project\\project\\clone-reddit\\src\\Components\\Favorite\\Favorite.jsx",[],["174","175"],"C:\\Github\\Public\\project\\project\\clone-reddit\\src\\Components\\Home\\Home.jsx",[],"C:\\Github\\Public\\project\\project\\clone-reddit\\src\\Components\\Navigation\\Drawer\\Drawer.jsx",[],"C:\\Github\\Public\\project\\project\\clone-reddit\\src\\Components\\Navigation\\MenuToggle\\MenuToggle.jsx",[],"C:\\Github\\Public\\project\\project\\clone-reddit\\src\\Components\\UI\\Backdrop\\Backdrop.jsx",[],"C:\\Github\\Public\\project\\project\\clone-reddit\\src\\Components\\UI\\Favorite\\Favorite.jsx",[],"C:\\Github\\Public\\project\\project\\clone-reddit\\src\\Components\\Posts\\PostsList.jsx",[],"C:\\Github\\Public\\project\\project\\clone-reddit\\src\\Components\\Posts\\PostItem\\PostItem.jsx",[],"C:\\Github\\learn\\clone-reddit-dev\\src\\index.js",[],["176","177"],"C:\\Github\\learn\\clone-reddit-dev\\src\\reportWebVitals.js",[],"C:\\Github\\learn\\clone-reddit-dev\\src\\App.js",[],"C:\\Github\\learn\\clone-reddit-dev\\src\\hoc\\Layout\\Layout.jsx",[],"C:\\Github\\learn\\clone-reddit-dev\\src\\Components\\Home\\Home.jsx",[],"C:\\Github\\learn\\clone-reddit-dev\\src\\Components\\Posts\\PostsList.jsx",["178","179"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n        width: 1200,\r\n        height: '100%'\r\n\r\n    },\r\n    icon: {\r\n        color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n    a: {\r\n        color: \"#fff\",\r\n        textDecoration: 'none',\r\n        fontWeight: 'bold',\r\n        letterSpacing: '0.05rem'\r\n\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst PostsList = ({ content }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    if (content) {\r\n        return (\r\n            <div className={classes.root}>\r\n                <GridList cellHeight={380} cols={3} className={classes.gridList}>\r\n                    {/* <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto', width: '100%' }}>\r\n                        <ListSubheader component=\"div\">Clone reddit content</ListSubheader>\r\n                    </GridListTile> */}\r\n                    {content.map((tile) => {\r\n                        if (tile.data.preview) {\r\n                            return (\r\n\r\n                                <GridListTile key={tile.data.id}>\r\n                                    {tile.data.is_video === false\r\n                                        ? <img src={tile.data.url} alt={tile.data.author} />\r\n                                        : <video controls autoplay='true' loop\r\n                                            src={tile.data.media.reddit_video.fallback_url}\r\n                                        >\r\n\r\n                                        </video>\r\n                                    }\r\n                                    <GridListTileBar\r\n                                        title={tile.data.title}\r\n                                        subtitle={<span>posted by: <a\r\n                                            href={'https://www.reddit.com/user/' + tile.data.author} t\r\n                                            target=\"_blank\"\r\n                                            rel=\"noreferrer\"\r\n                                            className={classes.a}\r\n                                        > {tile.data.author}\r\n                                        </a></span>}\r\n                                        actionIcon={\r\n                                            <IconButton aria-label={`star ${tile.title}`} className={classes.icon}>\r\n                                                <StarBorderIcon />\r\n                                            </IconButton>\r\n                                        }\r\n                                    />\r\n                                </GridListTile>\r\n                            )\r\n                        }\r\n                    }\r\n                    )}\r\n                </GridList>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default PostsList\r\n","C:\\Github\\learn\\clone-reddit-dev\\src\\Components\\Navigation\\MenuToggle\\MenuToggle.jsx",[],"C:\\Github\\learn\\clone-reddit-dev\\src\\Components\\Navigation\\Drawer\\Drawer.jsx",[],"C:\\Github\\learn\\clone-reddit-dev\\src\\Components\\Posts\\PostItem\\PostItem.jsx",["180","181","182","183","184","185","186"],"import React from 'react'\r\nimport s from './PostItem.module.scss'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info'\r\n\r\nimport FavoriteButton from '../../UI/Favorite/Favorite'\r\n\r\nconst PostItem = ({ postslist }) => {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-around',\r\n            overflow: 'hidden',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        gridList: {\r\n            width: 500,\r\n            height: 450,\r\n        },\r\n        icon: {\r\n            color: 'rgba(255, 255, 255, 0.54)',\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    if (postslist.data.preview) {\r\n        let postlink = 'https://www.reddit.com/' + postslist.data.permalink\r\n        return (\r\n            <div className={classes.root}>\r\n\r\n                <GridListTile key={postslist.data.id}>\r\n                    <img src={postslist.data.url} alt={postslist.data.title} />\r\n\r\n                </GridListTile>\r\n\r\n            </div >\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default PostItem\r\n\r\n\r\n//  <div className={s.card}>\r\n//                 <div className={s.cardWrapper}>\r\n//                     <div className={s.cardMedia}>\r\n//                         <img src={postslist.data.url_overridden_by_dest} alt=\"\" />\r\n//                     </div>\r\n//                     <div className={s.cardText}>\r\n//                         <p>\r\n//                             {postslist.data.title}\r\n//                         </p>\r\n//                         <div className=\"div\">\r\n//                             <h6>{postslist.data.author_flair_text}</h6>\r\n//                             <h4>posted by <span>{postslist.data.author}</span> </h4>\r\n//                             <h5>{postslist.data.subreddit_name_prefixed}</h5>\r\n//                             <div className={s.cardAction}>\r\n//                                 <a href={postlink} target=\"_blank\" without rel=\"noreferrer\"> show comment</a>\r\n//                             </div>\r\n//                         </div>\r\n\r\n//                     </div>\r\n\r\n//                 </div>\r\n\r\n//                 <FavoriteButton />\r\n//             </div>","C:\\Github\\learn\\clone-reddit-dev\\src\\Components\\UI\\Backdrop\\Backdrop.jsx",[],"C:\\Github\\learn\\clone-reddit-dev\\src\\Components\\UI\\Favorite\\Favorite.jsx",[],"C:\\Github\\learn\\clone-reddit-dev\\src\\Components\\UI\\Buttons\\ButtonNext.jsx",[],"C:\\Github\\learn\\clone-reddit-dev\\src\\Components\\UI\\Buttons\\ButtonPrev.jsx",[],"C:\\Github\\Reddit-media\\src\\index.js",[],["187","188"],"C:\\Github\\Reddit-media\\src\\App.js",[],"C:\\Github\\Reddit-media\\src\\reportWebVitals.js",[],"C:\\Github\\Reddit-media\\src\\hoc\\Layout\\Layout.jsx",[],"C:\\Github\\Reddit-media\\src\\Components\\Home\\Home.jsx",[],"C:\\Github\\Reddit-media\\src\\Components\\Posts\\PostsList.jsx",["189","190"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PostItem from './PostItem/PostItem'\r\n// import SortMenu from '../UI/SortMenu/SortMenu'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        boxSizing: 'border-box',\r\n        width: '90%',\r\n        margin: '0 auto',\r\n        // flexGrow: 1\r\n    },\r\n    gridItem: {\r\n        boxSizing: 'border-box',\r\n        width: 400,\r\n        height: 400,\r\n        margin: 10,\r\n        padding: 0,\r\n    },\r\n    icon: {\r\n        color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n    a: {\r\n        color: \"#fff\",\r\n        textDecoration: 'none',\r\n        fontWeight: 'bold',\r\n        letterSpacing: '0.05rem'\r\n\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst PostsList = ({ content, sorting, changeSort }) => {\r\n\r\n\r\n    const [spacing, setSpasing] = React.useState(2)\r\n    const classes = useStyles();\r\n\r\n    if (content) {\r\n        return (\r\n            <Grid container justify='center' spacing={10} className={classes.root}>\r\n                {/* <SortMenu onClick={changeSort} sorting={sort} /> */}\r\n                <Grid item xs={12} >\r\n                    <Grid container justify='center' spacing={spacing}>\r\n                        {content.map((tile) => {\r\n                            if (tile.data.preview) {\r\n                                return (\r\n                                    <PostItem key={tile.data.id} data={tile} content={content} />\r\n                                )\r\n                            }\r\n                        }\r\n                        )}\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default PostsList\r\n","C:\\Github\\Reddit-media\\src\\Components\\Navigation\\Drawer\\Drawer.jsx",[],"C:\\Github\\Reddit-media\\src\\Components\\Navigation\\MenuToggle\\MenuToggle.jsx",[],"C:\\Github\\Reddit-media\\src\\Components\\UI\\Buttons\\ButtonPrev.jsx",[],"C:\\Github\\Reddit-media\\src\\Components\\UI\\Buttons\\ButtonNext.jsx",[],"C:\\Github\\Reddit-media\\src\\Components\\UI\\Backdrop\\Backdrop.jsx",[],"C:\\Github\\Reddit-media\\src\\Components\\Posts\\PostItem\\PostItem.jsx",[],"C:\\Github\\Reddit-media\\src\\Components\\Favorite\\Favorite.jsx",[],"C:\\Github\\Reddit-media\\src\\Components\\Favorite\\FavItem\\FavItem.jsx",["191"],"import React from 'react'\r\nimport Card from './Card/Card'\r\n\r\n\r\nlet raw = JSON.parse(localStorage.getItem('posts'))\r\nconsole.log(raw);\r\nconst FavItem = ({ files }) => {\r\n\r\n    return (\r\n        <div>\r\n            {files.map((files) => {\r\n                if (localStorage.getItem('posts')) {\r\n                    return (\r\n                        <Card key={files.data.id} src={files.data.url} />\r\n                    )\r\n                }\r\n            }\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavItem\r\n","C:\\Github\\Reddit-media\\src\\Components\\Favorite\\FavItem\\Card\\Card.jsx",[],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"192","replacedBy":"196"},{"ruleId":"194","replacedBy":"197"},{"ruleId":"192","replacedBy":"198"},{"ruleId":"194","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":21},{"ruleId":"204","severity":1,"message":"205","line":48,"column":41,"nodeType":"206","messageId":"207","endLine":48,"endColumn":43},{"ruleId":"200","severity":1,"message":"208","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":9},{"ruleId":"200","severity":1,"message":"209","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":23},{"ruleId":"200","severity":1,"message":"201","line":7,"column":8,"nodeType":"202","messageId":"203","endLine":7,"endColumn":21},{"ruleId":"200","severity":1,"message":"210","line":8,"column":8,"nodeType":"202","messageId":"203","endLine":8,"endColumn":18},{"ruleId":"200","severity":1,"message":"211","line":9,"column":8,"nodeType":"202","messageId":"203","endLine":9,"endColumn":16},{"ruleId":"200","severity":1,"message":"212","line":11,"column":8,"nodeType":"202","messageId":"203","endLine":11,"endColumn":22},{"ruleId":"200","severity":1,"message":"213","line":35,"column":13,"nodeType":"202","messageId":"203","endLine":35,"endColumn":21},{"ruleId":"192","replacedBy":"214"},{"ruleId":"194","replacedBy":"215"},{"ruleId":"200","severity":1,"message":"216","line":38,"column":21,"nodeType":"202","messageId":"203","endLine":38,"endColumn":31},{"ruleId":"204","severity":1,"message":"205","line":47,"column":45,"nodeType":"206","messageId":"207","endLine":47,"endColumn":47},{"ruleId":"204","severity":1,"message":"205","line":11,"column":32,"nodeType":"206","messageId":"207","endLine":11,"endColumn":34},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],["217"],["218"],["217"],["218"],"no-unused-vars","'ListSubheader' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'s' is defined but never used.","'GridListTileBar' is defined but never used.","'IconButton' is defined but never used.","'InfoIcon' is defined but never used.","'FavoriteButton' is defined but never used.","'postlink' is assigned a value but never used.",["217"],["218"],"'setSpasing' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]